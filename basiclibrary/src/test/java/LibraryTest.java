/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testRolls() {
        Library classUnderTest = new Library();
        assertTrue("rolls should return an array of integers containing n numbers, for this test n = 3", classUnderTest.rolls(3).length == 3);
    }
    @Test public void testDuplicates() {
        Library classUnderTest = new Library();
        int[] testTrue = new int[] {2, 2};
        int[] testFalse = new int[] {1, 2};
        assertTrue("duplicates should return true if the array contains a duplicate", classUnderTest.duplicates(testTrue));
        assertFalse("duplicates should return true if the array contains a duplicate", classUnderTest.duplicates(testFalse));
    }
    @Test public void testAverageValue() {
        Library classUnderTest = new Library();
        int[] testAverage = new int[] {1, 2, 3};
        assertEquals("averageValue should return the average as a provided array. For this test that is 2.", 2, classUnderTest.averageValue(testAverage));
    }
    @Test public void testAverageArray() {
        Library classUnderTest = new Library();
        int[][] testMatrix = new int[][]{
                {2, 2, 2, 2},
                {2, 2, 2, 2},
                {1, 1, 1, 1},
                {2, 2, 2, 2},
        };
        assertEquals("lowestAverageArray should return the array with the lowest average from a matrix of arrays. For this test that is the third array at index 2.", classUnderTest.lowestAverageArray(testMatrix), testMatrix[2]);
    }
    @Test public void testRollDSix() {
        Library classUnderTest = new Library();
        int rolledValue = classUnderTest.rollDSix();
        assertTrue("someLibraryMethod should return 'true'", (rolledValue >= 1 && rolledValue <= 6));
    }

}
